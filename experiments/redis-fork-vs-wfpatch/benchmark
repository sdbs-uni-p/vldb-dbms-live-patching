#!/usr/bin/env zsh
set -euvx

SCRIPT_DIR=${0:a:h}
cd ${SCRIPT_DIR}

./setup

sudo cpupower frequency-set -g performance


qps=4500
for action_after_sleep in `seq 1 200`; do
    for method in 0 5 6; do
        queries=$((qps*(action_after_sleep+10)))

        sudo sh -c "sync && echo 3 > /proc/sys/vm/drop_caches"
    
        set +e
        kill -9 `pidof "./redis-server *:6379"`
        set -e
        sleep 1
    
        RESULT_DIR=${SCRIPT_DIR}/result/result-${method}-${action_after_sleep}
        mkdir -p ${RESULT_DIR}
        touch ${RESULT_DIR}/wfpatch_log
        touch ${RESULT_DIR}/wfpatch_log.csv
        cd ${SCRIPT_DIR}/redis/src
        
        WF_MEASURE_PTE=1 WF_GLOBAL=0 WF_LOGFILE=${RESULT_DIR}/wfpatch_log WF_PATCH_TRIGGER_FIFO=/tmp/trigger-redis taskset -c 1-47:2 ./redis-server --save "" --appendonly no --unixsocket /tmp/redis.sock &
        server_pid=$!
        
        sleep 2
        taskset -c 1-47:2 ./redis-benchmark --csv -t set -n $queries -r 1000000000 -d 409600 -c 10 --threads 10 -s /tmp/redis.sock 2> ${RESULT_DIR}/latencies.csv &
        benchmark_pid=$!
        
        sleep $action_after_sleep
        echo ${method} > /tmp/trigger-redis
        
        # Wait for benchmark process to finish.. 
        #tail --pid=$benchmark_pid -f /dev/null
        while s=`ps -p $benchmark_pid -o s=` && [[ "$s" && "$s" != 'Z' ]]; do
            sleep 1
        done

        sleep 1
        
        # Write result
        echo 7 > /tmp/trigger-redis
    
        sleep 1
        
        set +e 
        kill -2 $server_pid
        set -e
        sleep 30 # It takes some time until all main memory is deleted
    done
done

sudo cpupower frequency-set -g schedutil

